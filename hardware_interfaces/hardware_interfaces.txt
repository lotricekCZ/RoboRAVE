cmake_minimum_required(VERSION 3.0)
set(CMAKE_CXX_COMPILER "/usr/bin/g++")
set(CMAKE_C_COMPILER "/usr/bin/gcc")
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)	

set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)
find_package(PkgConfig REQUIRED)


add_library(chat 				SHARED ${CMAKE_CURRENT_SOURCE_DIR}/hardware_interfaces/serial/chat.cpp)
add_library(camera 				SHARED ${CMAKE_CURRENT_SOURCE_DIR}/hardware_interfaces/object_recognition/camera.cpp)
add_library(message 			SHARED ${CMAKE_CURRENT_SOURCE_DIR}/hardware_interfaces/serial/message.cpp)
add_library(gpio 				SHARED ${CMAKE_CURRENT_SOURCE_DIR}/hardware_interfaces/gpio/rpi_gpio.cpp)
add_library(message_pair 		SHARED ${CMAKE_CURRENT_SOURCE_DIR}/hardware_interfaces/serial/message_pair.cpp)
add_library(serial_peripheral 	SHARED ${CMAKE_CURRENT_SOURCE_DIR}/hardware_interfaces/serial/serial_peripheral.cpp)
add_library(motors			 	SHARED ${CMAKE_CURRENT_SOURCE_DIR}/hardware_interfaces/motors/motors.cpp)
add_library(turbine			 	SHARED ${CMAKE_CURRENT_SOURCE_DIR}/hardware_interfaces/turbine/turbine.cpp)
add_library(fire_sensor 		SHARED ${CMAKE_CURRENT_SOURCE_DIR}/hardware_interfaces/fire_sensors/fire_sensor.cpp)
add_library(ground_sensor 		SHARED ${CMAKE_CURRENT_SOURCE_DIR}/hardware_interfaces/ground_sensors/ground_sensor.cpp)
add_library(thermocam	 		SHARED ${CMAKE_CURRENT_SOURCE_DIR}/hardware_interfaces/thermocam/thermocam.cpp)
add_library(lidar		 		SHARED ${CMAKE_CURRENT_SOURCE_DIR}/hardware_interfaces/lidar/lidar.cpp)

add_library(serial STATIC ${CMAKE_CURRENT_SOURCE_DIR}/hardware_interfaces/serial/serial.cpp)
#~ add_library(serial SHARED ${CMAKE_CURRENT_SOURCE_DIR}/hardware_interfaces/serial/serial.cpp)
#~ add_library(mf1 SHARED ${CMAKE_CURRENT_SOURCE_DIR}/hardware_interfaces/main_functions/main_functions21-40.cpp)
#~ add_library(mf2 SHARED ${CMAKE_CURRENT_SOURCE_DIR}/hardware_interfaces/main_functions/main_functions41-60.cpp)

IF(${CMAKE_SYSTEM_PROCESSOR} MATCHES "arm")
	# Locate libraries and headers
	find_package(WiringPi REQUIRED)
	find_package(Threads REQUIRED) 
	
	# Include headers
	include_directories(${WIRINGPI_INCLUDE_DIRS}) 
	
	# Link against libraries
	target_link_libraries(gpio ${WIRINGPI_LIBRARIES}) 
	target_link_libraries(gpio ${CMAKE_THREAD_LIBS_INIT}) 
ENDIF(${CMAKE_SYSTEM_PROCESSOR} MATCHES "arm")

target_link_libraries(serial -lCppLinuxSerial)
target_link_libraries(message Threads::Threads)
target_link_libraries(message_pair message)
target_link_libraries(chat message serial_peripheral fire_sensor lidar message_pair Threads::Threads)
target_link_libraries(motors serial_peripheral)
target_link_libraries(turbine serial_peripheral)
target_link_libraries(ground_sensor node serial_peripheral)
target_link_libraries(thermocam node serial_peripheral)
target_link_libraries(fire_sensor node serial_peripheral)
target_link_libraries(lidar node serial_peripheral)
target_link_libraries(camera variables)
target_link_libraries(logic camera motors chat ground_sensor lidar gpio turbine fire_sensor serial_peripheral)

#~ target_link_libraries(motorduino node)


set(CMAKE_CXX_FLAGS "-std=c++17 ${CMAKE_CXX_FLAGS} ${TORCH_CXX_FLAGS}")

target_link_libraries(roborave chat message serial gpio)
